目前比较好用的是dubbo,阿里巴巴的开源组件，使用Hessian的序列化协议，传输则是TCP协议，使用了高性能的NIO框架Netty
还有RMI

RPC架构分为三部分：
1. 服务提供者，运行在服务端，提供服务接口定义与服务实现类
2. 服务中心，运行在服务端，负责将本地服务发布成远程服务，管理远程服务，提供给服务消费者使用
3. 服务消费者，运行在客户端，通过远程代理对象调用远程服务


这里实现的简单RPC框架是使用Java语言开发，与Java语言高度耦合，并且通信方式采用的Socket是基于BIO实现的，IO效率不高，还有Java原生的序列化机制占内存太多，运行效率也不高。可以考虑从下面几种方法改进。

可以采用基于JSON数据传输的RPC框架；
可以使用NIO或直接使用Netty替代BIO实现；
使用开源的序列化机制，如Hadoop Avro与Google protobuf等；
服务注册可以使用Zookeeper进行管理，能够让应用更加稳定。

